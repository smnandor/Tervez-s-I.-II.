// <auto-generated />
using System;
using IFURETE_4.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IFURETE_4.Migrations
{
    [DbContext(typeof(IFURETE_4Context))]
    [Migration("20181117141121_User_Booking")]
    partial class User_Booking
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IFURETE4.Models.Booking", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("amount");

                    b.Property<DateTime>("date");

                    b.Property<int>("number_of_trucks");

                    b.Property<TimeSpan>("time_end");

                    b.Property<TimeSpan>("time_start");

                    b.Property<int>("weight");

                    b.HasKey("ID");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("IFURETE4.Models.Booking_Delivery", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("booking_id");

                    b.Property<int>("delivery_id");

                    b.HasKey("ID");

                    b.ToTable("Booking_Delivery");
                });

            modelBuilder.Entity("IFURETE4.Models.Delivery", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("actual_amount");

                    b.Property<bool>("delivered");

                    b.Property<bool>("denied");

                    b.Property<bool>("weighed");

                    b.HasKey("ID");

                    b.ToTable("Delivery");
                });

            modelBuilder.Entity("IFURETE4.Models.Limit", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("limit");

                    b.Property<string>("material");

                    b.Property<string>("name_of_company");

                    b.HasKey("ID");

                    b.ToTable("Limit");
                });

            modelBuilder.Entity("IFURETE4.Models.Material", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("MaterialName");

                    b.Property<string>("ShiftingNumber");

                    b.Property<string>("Unit");

                    b.HasKey("ID");

                    b.ToTable("Material");
                });

            modelBuilder.Entity("IFURETE4.Models.Role", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EAKER_ui");

                    b.Property<int>("booking_ui");

                    b.Property<int>("material");

                    b.Property<string>("name_of_role");

                    b.Property<int>("recipient_ui");

                    b.Property<int>("report_ui");

                    b.Property<int>("sites");

                    b.Property<int>("supplier_limit");

                    b.Property<int>("users");

                    b.HasKey("ID");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("IFURETE4.Models.Site", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("EmailAddressOfContact");

                    b.Property<string>("Name");

                    b.Property<string>("NameOfContact");

                    b.Property<string>("NumberOfTrucks");

                    b.Property<string>("OpenFrom");

                    b.Property<string>("OpenTo");

                    b.Property<string>("PhonenumberOfContact");

                    b.HasKey("ID");

                    b.ToTable("Site");
                });

            modelBuilder.Entity("IFURETE4.Models.Site_Material", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("material_id");

                    b.Property<int>("site_id");

                    b.HasKey("ID");

                    b.ToTable("Site_Material");
                });

            modelBuilder.Entity("IFURETE4.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("e_mail")
                        .HasMaxLength(60);

                    b.Property<bool>("is_confirmed");

                    b.Property<bool>("is_logged_in");

                    b.Property<string>("name")
                        .HasMaxLength(25);

                    b.Property<string>("password")
                        .HasMaxLength(25);

                    b.Property<string>("phone_number");

                    b.Property<string>("username")
                        .HasMaxLength(25);

                    b.HasKey("ID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("IFURETE4.Models.User_Limit", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("limit_id");

                    b.Property<int>("user_id");

                    b.HasKey("ID");

                    b.ToTable("User_Limit");
                });

            modelBuilder.Entity("IFURETE4.Models.Users_Roles", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("role_id");

                    b.Property<int>("user_id");

                    b.HasKey("ID");

                    b.ToTable("Users_Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
