@model IEnumerable<IFURETE4.Models.User>

@{
    ViewData["Title"] = "Felhaszánlók";
}
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<nav class="navbar navbar-expand-lg navbar-light" style="background-color: #e3f2fd;">
    <a class="nav-link" asp-area="" asp-controller="Users" asp-action="Index">Felhasználók</a>
    <a class="nav-link" asp-area="" asp-controller="Sites" asp-action="AdminView">Telephelyek</a>
    <a class="nav-link" asp-area="" asp-controller="Materials" asp-action="AdminView">Anyagok</a>
    <a class="nav-link" asp-area="" asp-controller="Roles" asp-action="AdminView">Szerepkörök</a>
</nav>

<div class="card">
    <div class="card-header">
        Felhasználók
    </div>
    <div class="card-body">
        <div class="container">
            <div class="row">
                <div class="col-6" style="width: 30px">
                    <div class="row">
                        <div class="col-4" style="width: 30px">
                            <input type="text" id="nameSearchInput" onkeyup="nameSearch()" placeholder="Keresés névre..." class="form-control">
                        </div>
                        <div class="col-4" style="width: 30px">
                            <input type="text" id="usernameSearchInput" onkeyup="usernameSearch()" placeholder="Keresés f.névre..." class="form-control">
                        </div>
                        <div class="col-4" style="width: 30px">
                            <form id="roleInputForm">
                                <select name="roles" id="roleInput" class="custom-select">
                                    <option value="all">            Összes          </option>
                                    <option value="átvevő">         Átvevő          </option>
                                    <option value="beszállító">     Beszállító      </option>
                                    <option value="beszerző">       Beszerző        </option>
                                    <option value="elszámoló">      Elszámoló       </option>
                                    <option value="rendszergazda">  Rendszergazda   </option>
                                </select>
                            </form>
                        </div>
                    </div>
                    <table id="userTable" class="table table-bordered"></table>
                </div>
                <div class="col-6">

                    <div float="left">Felhasználói beállítások:</div>
                    <b id="username">-</b>
                    <div class="row">
                        <div class="col-3" style="width: 30px">
                            <br />
                            Név:
                            <br /> <br />
                            E-mail cím:
                            <br /> <br />
                            Telefonszám:
                            <br /> <br />

                        </div>
                        <div class="col-9" style="width: 30px">
                            <form method="post" action="/Users/EditUser" id="EditForm">
                                <input type="hidden" name="userID" dirname="userID" id="userID">
                                <input type="text" name="name" id="name" placeholder="Név" class="form-control" />
                                <input type="text" name="email" id="emailAddress" placeholder="E-mail cím" class="form-control" />
                                <input type="text" name="phonenumber" id="phoneNumber" placeholder="Telefonszám" class="form-control" />
                                <fieldset id="checkboxes"></fieldset>
                                <div class="row">
                                    <div class="col-6" style="width: 30px">
                                        <button id="registrationConfrimation" onclick="submit()" class="btn btn-primary">Regisztráció megerősítése</button>

                                    </div>
                                    <div class="col-6" style="width: 30px">
                                        <button type="submit" onclick="submit()" class="btn btn-success">Módosítások mentése</button>
                                    </div>
                                </div>
                            
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>




<script type="text/javascript">

    var nameArray = new Array();
    var usernameArray = new Array();
    var emailArray = new Array();
    var phonenumberArray = new Array();
    var confirmedArray = new Array();
    var idArray = new Array();



   @foreach (var item in Model)
   {
       @:nameArray.push("@Html.Raw(@item.name)");
       @:usernameArray.push("@Html.Raw(@item.username)");
       @:emailArray.push("@Html.Raw(@item.e_mail)");
       @:phonenumberArray.push("@Html.Raw(@item.phone_number)");
       @:confirmedArray.push("@Html.Raw(@item.is_confirmed)");
       @:idArray.push("@Html.Raw(@item.ID)");


   }

    var roleArray = new Array();
    roleArray[0] = "Beszerző";
    roleArray[1] = "Beszállító";
    roleArray[2] = "Elszámoló";
    roleArray[3] = "Átvevő";
    roleArray[4] = "Rendszergazda";
    roleArray[5] = "Átvevő";

    //Dropdown menu search
    document.getElementById("roleInput").addEventListener("change", roleSearch);
    //On row click search
    document.getElementById("userTable").addEventListener("click", tableRowSelect);

    function generateUserTable()
    {
        var tbl = document.getElementById("userTable");
        var tblBody = document.createElement("tbody");
        var row = document.createElement("tr");
        var cell = document.createElement("th");
        var cellText = document.createTextNode("Név");
        cell.appendChild(cellText);
        row.appendChild(cell);
        var cell = document.createElement("th");
        var cellText = document.createTextNode("Felhasználónév");
        cell.appendChild(cellText);
        row.appendChild(cell);
        var cell = document.createElement("th");
        var cellText = document.createTextNode("Szerepkör");
        cell.appendChild(cellText);
        row.appendChild(cell);
        tblBody.appendChild(row);


        for (var i = 0; i < nameArray.length; i++)
        {
            var row = document.createElement("tr");
            row.setAttribute("rowIndex", i);

            var cell = document.createElement("td");
            var cellText = document.createTextNode(nameArray[i]);
            cell.appendChild(cellText);
            row.appendChild(cell);

            var cell = document.createElement("td");
            var cellText = document.createTextNode(usernameArray[i]);
            cell.appendChild(cellText);
            row.appendChild(cell);

            var cell = document.createElement("td");
            var cellText = document.createTextNode(roleArray[i]);
            cell.appendChild(cellText);
            row.appendChild(cell);

            tblBody.appendChild(row);
        }
        while (tbl.firstChild)
        {
            tbl.removeChild(tbl.firstChild);
        }
        tbl.appendChild(tblBody);
        tbl.setAttribute("border", "2");
    }
    generateUserTable();

    var everyRoleArray = new Array();
    everyRoleArray[0] = "Beszerző";
    everyRoleArray[1] = "Átvevő";
    everyRoleArray[2] = "Beszállító";
    everyRoleArray[3] = "Elszámoló";
    everyRoleArray[4] = "Rendszergazda";


    function generateCheckboxes()
    {
        var fieldset = document.getElementById("checkboxes");
        var legend = document.createElement("legend");
        legend.innerHTML = "Szerepkör";
        fieldset.appendChild(legend);

        for (var i = 0; i < everyRoleArray.length; i++)
        {
            var div = document.createElement("div");
            var input = document.createElement("input");
            input.setAttribute("type", "checkbox");
            input.setAttribute("value", everyRoleArray[i]);
            var label = document.createElement("label");
            label.innerHTML = everyRoleArray[i];
            div.appendChild(input);
            div.appendChild(label);
            fieldset.appendChild(div);
        }
    }
    generateCheckboxes();

    function nameSearch()
    {
        // Declare variables
        var input, filter, table, tr, td, i;
        input = document.getElementById("nameSearchInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("userTable");
        tr = table.getElementsByTagName("tr");

        // Loop through all table rows, and hide those who don't match the search query
        for (i = 0; i < tr.length; i++)
        {
            td = tr[i].getElementsByTagName("td")[0];
            if (td)
            {
                if (td.innerHTML.toUpperCase().indexOf(filter) > -1)
                {
                    tr[i].style.display = "";
                }
                else
                {
                    tr[i].style.display = "none";
                }
            }
        }
    }

    function usernameSearch()
    {
        // Declare variables
        var input, filter, table, tr, td, i;
        input = document.getElementById("usernameSearchInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("userTable");
        tr = table.getElementsByTagName("tr");

        // Loop through all table rows, and hide those who don't match the search query
        for (i = 0; i < tr.length; i++)
        {
            td = tr[i].getElementsByTagName("td")[1];
            if (td)
            {
                if (td.innerHTML.toUpperCase().indexOf(filter) > -1)
                {
                    tr[i].style.display = "";
                }
                else
                {
                    tr[i].style.display = "none";
                }
            }
        }
    }

    function roleSearch()
    {
        // Declare variables
        var input, filter, table, tr, td, i;
        input = document.getElementById("roleInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("userTable");
        tr = table.getElementsByTagName("tr");

        // Loop through all table rows, and hide those who don't match the search query
        if (input.value != "all")
        {
            for (i = 0; i < tr.length; i++)
            {
                td = tr[i].getElementsByTagName("td")[2];
                if (td)
                {
                    if (td.innerHTML.toUpperCase().indexOf(filter) > -1)
                    {
                        tr[i].style.display = "";
                    }
                    else
                    {
                        tr[i].style.display = "none";
                    }
                }
            }

        }
        else
        {
            for (i = 0; i < tr.length; i++)
            {
                td = tr[i].getElementsByTagName("td")[2];
                if (td)
                {
                    tr[i].style.display = "";

                }

            }
        }
    }



    function tableRowSelect(event)
    {
        document.getElementById("userID").value = idArray[event.target.parentElement.rowIndex - 1];
        document.getElementById("name").value = event.target.parentElement.children[0].innerHTML;
        document.getElementById("username").innerHTML = event.target.parentElement.children[1].innerHTML;
        document.getElementById("emailAddress").value = emailArray[event.target.parentElement.rowIndex - 1];
        document.getElementById("phoneNumber").value = phonenumberArray[event.target.parentElement.rowIndex - 1];
        console.log(idArray[event.target.parentElement.rowIndex - 1]);
        console.log(document.getElementById("userID").value);
        console.log(document.getElementById("phoneNumber").value);

        if (confirmedArray[event.target.parentElement.rowIndex - 1] == "True")
        {
            console.log("confirmed");
        }
        else
        {
            console.log("not confirmed");

        }
    }


</script>
<style>
/*TABLE DESIGN*/

#userTable {
    border-collapse: collapse; /* Collapse borders */
    width: 100%; /* Full-width */
    border: 1px solid #ddd; /* Add a grey border */
    font-size: 18px; /* Increase font-size */
}

#userTable th, #userTable td {
    text-align: left; /* Left-align text */
        padding: 12px; /* Add padding */
    }

#userTable tr {
/* Add a bottom border to all table rows */
border-bottom: 1px solid #ddd;
    }

        #userTable tr:hover {
            /* Add a grey background color to the table header and on hover */
            background-color: #f1f1f1;
        }

tr:hover {
    /* Add a grey background color to the table header and on hover */
    background-color: #f1f1f1;
}

input[type="checkbox"] {
    width: 40px;
}

/*NAME SEARCHFIELD DESIGN*/
.form-control {
    width: 50%;
    font-size: 16px; /* Increase font-size */
    padding: 12px 20px 12px 40px; /* Add some padding */
    border: 1px solid #ddd; /* Add a grey border */
    margin-bottom: 10px; /* Add some space below the input */
    margin-top: 10px;
}



#nameSearchInput, #usernameSearchInput, #roleInput {
    width: 100%;
    font-size: 16px; /* Increase font-size */
    margin-bottom: 10px; /* Add some space below the input */
    margin-top: 10px;
    text-align: left;
    padding: 14px;
}

#roleInput {
    padding: 8px;
}


#name, #emailAddress, #phoneNumber {
    width: 80%;
}

.btn {
    margin-bottom: 10px;
    display: inline-block;
    text-align: center;
    width: 180px;
    height: 40px;
    float: right;
    font-size: 14px;
    padding: 2px;
    margin-top:30px;
}

#registrationConfrimation{
    float: left;

}

legend, label {
    padding: 3px 6px;
}
   
tr:nth-child(even) {
    background-color: #f2f2f2;
}


</style>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
